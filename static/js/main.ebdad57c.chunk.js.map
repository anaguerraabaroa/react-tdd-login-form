{"version":3,"sources":["auth/services/index.js","consts/index.js","utils/contexts/auth-context.js","utils/helpers.js","auth/components/login-page/login-page.js","utils/components/private-route.js","utils/components/user-layout.js","admin/components/admin-page/admin-page.js","employee/components/employee-page/employee-page.js","app-router.js","utils/components/auth-guard.js","App.js","index.js"],"names":["login","email","password","fetch","method","headers","body","JSON","stringify","ADMIN_ROLE","EMPLOYEE_ROLE","AuthContext","React","createContext","validateEmail","test","validatePassword","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","LoginPage","classes","useContext","handleSuccessLogin","user","useState","emailValidationMessage","setEmailValidationMessage","passwordValidationMessage","setPasswordValidationMessage","formValues","setFormValues","isFetching","setIsFetching","isOpen","setIsOpen","errorMessage","setErrorMessage","validateForm","isEmailEmpty","isPasswordEmpty","handleSubmit","e","a","preventDefault","response","ok","json","role","username","data","message","handleChange","target","value","name","Container","component","maxWidth","CssBaseline","className","Avatar","Typography","variant","CircularProgress","data-testid","onSubmit","TextField","required","fullWidth","label","id","helperText","onChange","onBlur","error","type","Button","disabled","color","Snackbar","anchorOrigin","vertical","horizontal","open","autoHideDuration","onClose","to","PrivateRoute","children","path","allowRoles","isAuth","exact","length","includes","defaultProps","UserLayout","AppBar","position","Toolbar","Link","AdminPage","EmployeePage","AppRouter","AuthGuard","initialRole","isUserAuth","setIsUserAuth","setUser","authProviderValue","Provider","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ebdad57c.chunk.js","sourcesContent":["export const login = ({email, password}) =>\n  fetch('/login', {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json',\n    },\n    body: JSON.stringify({email, password}),\n  })\n\nexport default {login}\n","export const HTTP_UNEXPECTED_ERROR_STATUS = 500\nexport const HTTP_INVALID_CREDENTIALS_STATUS = 401\nexport const HTTP_OK_STATUS = 200\n\nexport const ADMIN_ROLE = 'admin'\nexport const EMPLOYEE_ROLE = 'employee'\n\nexport const ADMIN_EMAIL = 'admin@mail.com'\nexport const EMPLOYEE_EMAIL = 'employee@mail.com'\n\nexport default {\n  HTTP_UNEXPECTED_ERROR_STATUS,\n  HTTP_INVALID_CREDENTIALS_STATUS,\n  HTTP_OK_STATUS,\n  ADMIN_ROLE,\n  EMPLOYEE_ROLE,\n  ADMIN_EMAIL,\n  EMPLOYEE_EMAIL,\n}\n","import React from 'react'\n\nexport const AuthContext = React.createContext()\n\nexport default {AuthContext}\n","// regex email & password validation\nexport const validateEmail = email => {\n  const regex = /^([A-Za-z0-9_\\-.])+@([A-Za-z0-9_\\-.])+\\.([A-Za-z]{2,4})$/\n\n  return regex.test(email)\n}\n\nexport const validatePassword = password => {\n  const passwordRulesRegex = /^(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{8,})/\n\n  return passwordRulesRegex.test(password)\n}\n\nexport default {\n  validateEmail,\n  validatePassword,\n}\n","import React, {useState, useContext} from 'react'\nimport {Redirect} from 'react-router-dom'\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport Container from '@material-ui/core/Container'\nimport Avatar from '@material-ui/core/Avatar'\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined'\nimport Typography from '@material-ui/core/Typography'\nimport {makeStyles} from '@material-ui/core/styles'\n\nimport {login} from '../../services'\n\nimport {ADMIN_ROLE, EMPLOYEE_ROLE} from '../../../consts/index'\nimport {AuthContext} from '../../../utils/contexts/auth-context'\nimport {validateEmail, validatePassword} from '../../../utils/helpers'\n\n// styles\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%',\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}))\n\n// password validation message\nconst passwordValidationsMsg =\n  'The password must contain at least 8 characters, one upper case letter, one number and one special character'\n\nconst LoginPage = () => {\n  // styles\n  const classes = useStyles()\n\n  const {handleSuccessLogin, user} = useContext(AuthContext)\n\n  // state\n  const [emailValidationMessage, setEmailValidationMessage] = useState('')\n  const [passwordValidationMessage, setPasswordValidationMessage] = useState('')\n  const [formValues, setFormValues] = useState({email: '', password: ''})\n  const [isFetching, setIsFetching] = useState(false)\n  const [isOpen, setIsOpen] = useState(false)\n  const [errorMessage, setErrorMessage] = useState('')\n\n  // validate empty fields\n  const validateForm = () => {\n    const {email, password} = formValues\n\n    const isEmailEmpty = !email\n    const isPasswordEmpty = !password\n\n    if (isEmailEmpty) {\n      setEmailValidationMessage('The email is required')\n    }\n\n    if (isPasswordEmpty) {\n      setPasswordValidationMessage('The password is required')\n    }\n\n    return isEmailEmpty || isPasswordEmpty\n  }\n\n  // handle validation messages\n  const handleSubmit = async e => {\n    e.preventDefault()\n\n    if (validateForm()) {\n      return\n    }\n\n    const {email, password} = formValues\n\n    try {\n      setIsFetching(true)\n      const response = await login({email, password})\n      if (!response.ok) {\n        throw response\n      }\n      const {\n        user: {role, username},\n      } = await response.json()\n      handleSuccessLogin({role, username})\n    } catch (err) {\n      const data = await err.json()\n      setErrorMessage(data.message)\n      setIsOpen(true)\n    } finally {\n      setIsFetching(false)\n    }\n  }\n\n  const handleChange = ({target: {value, name}}) => {\n    setFormValues({...formValues, [name]: value})\n  }\n\n  const handleBlurEmail = () => {\n    if (!validateEmail(formValues.email)) {\n      setEmailValidationMessage(\n        'The email is invalid. Example: john.doe@mail.com',\n      )\n      return\n    }\n\n    setEmailValidationMessage('')\n  }\n\n  const handleBlurPassword = () => {\n    if (!validatePassword(formValues.password)) {\n      setPasswordValidationMessage(passwordValidationsMsg)\n      return\n    }\n\n    setPasswordValidationMessage('')\n  }\n\n  const handleClose = () => {\n    setIsOpen(false)\n  }\n\n  if (!isFetching && user.role === ADMIN_ROLE) {\n    return <Redirect to=\"/admin\" />\n  }\n\n  if (!isFetching && user.role === EMPLOYEE_ROLE) {\n    return <Redirect to=\"/employee\" />\n  }\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Login Page\n        </Typography>\n        {isFetching && <CircularProgress data-testid=\"loading-indicator\" />}\n        <form className={classes.form} onSubmit={handleSubmit}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            label=\"email\"\n            id=\"email\"\n            name=\"email\"\n            helperText={emailValidationMessage}\n            onChange={handleChange}\n            onBlur={handleBlurEmail}\n            value={formValues.email}\n            error={!!emailValidationMessage}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            label=\"password\"\n            id=\"password\"\n            type=\"password\"\n            name=\"password\"\n            helperText={passwordValidationMessage}\n            onChange={handleChange}\n            onBlur={handleBlurPassword}\n            value={formValues.password}\n            error={!!passwordValidationMessage}\n          />\n          <Button\n            type=\"submit\"\n            disabled={isFetching}\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Send\n          </Button>\n        </form>\n        <Snackbar\n          anchorOrigin={{\n            vertical: 'top',\n            horizontal: 'center',\n          }}\n          open={isOpen}\n          autoHideDuration={6000}\n          onClose={handleClose}\n          message={errorMessage}\n        />\n      </div>\n    </Container>\n  )\n}\n\nexport default LoginPage\n","import React, {useContext} from 'react'\nimport PropTypes from 'prop-types'\nimport {Route, Redirect} from 'react-router-dom'\n\nimport {AuthContext} from '../contexts/auth-context'\n\nexport const PrivateRoute = ({children, path, allowRoles}) => {\n  const {\n    isAuth,\n    user: {role},\n  } = useContext(AuthContext)\n\n  const getIsAllowed = () => {\n    if (allowRoles.length > 0) {\n      return allowRoles.includes(role)\n    }\n    return true\n  }\n\n  return (\n    <Route exact path={path}>\n      {isAuth && getIsAllowed() ? children : <Redirect to=\"/\" />}\n    </Route>\n  )\n}\n\nPrivateRoute.propTypes = {\n  children: PropTypes.node.isRequired,\n  path: PropTypes.string.isRequired,\n  allowRoles: PropTypes.arrayOf(PropTypes.string),\n}\n\nPrivateRoute.defaultProps = {\n  allowRoles: [],\n}\n\nexport default {\n  PrivateRoute,\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport {Link} from 'react-router-dom'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\nimport Container from '@material-ui/core/Container'\n\nexport const UserLayout = ({user, children}) => (\n  <Container>\n    <AppBar position=\"static\">\n      <Toolbar>\n        <Typography variant=\"h6\">{user.username}</Typography>\n        <Button component={Link} color=\"inherit\" to=\"/employee\">\n          Employee\n        </Button>\n      </Toolbar>\n    </AppBar>\n    {children}\n  </Container>\n)\n\nUserLayout.propTypes = {\n  user: PropTypes.shape({username: PropTypes.string.isRequired}).isRequired,\n  children: PropTypes.node.isRequired,\n}\n\nexport default {\n  UserLayout,\n}\n","import React, {useContext} from 'react'\nimport Typography from '@material-ui/core/Typography'\n\nimport {AuthContext} from '../../../utils/contexts/auth-context'\nimport {UserLayout} from '../../../utils/components/user-layout'\n\nexport const AdminPage = () => {\n  const {user} = useContext(AuthContext)\n  return (\n    <UserLayout user={user}>\n      <Typography component=\"h1\" variant=\"h5\">\n        Admin Page\n      </Typography>\n    </UserLayout>\n  )\n}\n\nexport default {\n  AdminPage,\n}\n","import React, {useContext} from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport Button from '@material-ui/core/Button'\n\nimport {AuthContext} from '../../../utils/contexts/auth-context'\nimport {UserLayout} from '../../../utils/components/user-layout'\nimport {ADMIN_ROLE} from '../../../consts'\n\nexport const EmployeePage = () => {\n  const {user} = useContext(AuthContext)\n\n  return (\n    <UserLayout user={user}>\n      <Typography component=\"h1\" variant=\"h5\">\n        Employee Page\n      </Typography>\n\n      {user.role === ADMIN_ROLE && (\n        <Button type=\"button\" variant=\"contained\" color=\"primary\">\n          Delete\n        </Button>\n      )}\n    </UserLayout>\n  )\n}\n\nexport default {\n  EmployeePage,\n}\n","import React from 'react'\nimport {Switch, Route, BrowserRouter as Router} from 'react-router-dom'\n\nimport {LoginPage} from './auth/components/login-page'\nimport {PrivateRoute} from './utils/components/private-route'\nimport {AdminPage} from './admin/components/admin-page'\nimport {EmployeePage} from './employee/components/employee-page'\nimport {ADMIN_ROLE} from './consts'\n\nexport const AppRouter = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\">\n          <LoginPage />\n        </Route>\n        <PrivateRoute path=\"/admin\" allowRoles={[ADMIN_ROLE]}>\n          <AdminPage />\n        </PrivateRoute>\n        <PrivateRoute path=\"/employee\">\n          <EmployeePage />\n        </PrivateRoute>\n      </Switch>\n    </Router>\n  )\n}\n\nexport default {\n  AppRouter,\n}\n","import React, {useState} from 'react'\nimport PropTypes from 'prop-types'\n\nimport {AuthContext} from '../contexts/auth-context'\n\nexport const AuthGuard = ({children, isAuth, initialRole}) => {\n  const [isUserAuth, setIsUserAuth] = useState(isAuth)\n  const [user, setUser] = useState({role: initialRole, username: ''})\n\n  const handleSuccessLogin = ({role, username}) => {\n    setUser({role, username})\n    setIsUserAuth(true)\n  }\n\n  const authProviderValue = {\n    isAuth: isUserAuth,\n    handleSuccessLogin,\n    user,\n  }\n\n  return (\n    <AuthContext.Provider value={authProviderValue}>\n      {children}\n    </AuthContext.Provider>\n  )\n}\n\nAuthGuard.propTypes = {\n  children: PropTypes.node.isRequired,\n  isAuth: PropTypes.bool,\n  initialRole: PropTypes.string,\n}\n\nAuthGuard.defaultProps = {\n  isAuth: false,\n  initialRole: '',\n}\n\nexport default {AuthGuard}\n","import React from 'react'\n\nimport {AppRouter} from './app-router'\n\nimport {AuthGuard} from './utils/components/auth-guard'\n\nfunction App() {\n  return (\n    <AuthGuard>\n      <AppRouter />\n    </AuthGuard>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\n// use mock server on development environment\nif (process.env.NODE_ENV === 'development') {\n  // eslint-disable-next-line global-require\n  const {worker} = require('./mocks/browser')\n  worker.start()\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}